# This is the master CFN - May run more templates from here
AWSTemplateFormatVersion: "2010-09-09"
Description: Plex Master CloudFormation templates
Parameters:
  VPCID:
    Type: List<AWS::EC2::VPC::Id>
  SubnetID:
    Description: SubnetID to deploy Plex
    Type: List<AWS::EC2::Subnet::Id>
  InstanceType:
    Description: Enter t2.micro, c3.large, or c3.xlarge
    Type: String
    Default: t2.micro
    AllowedValues:
      - t2.micro
      - c3.large
      - c3.xlarge
  S3TemplateBucket:
    Description: The name of the S3 Bucket that contains all our template resources
  S3TemplateKey:
    Description: The url for this git package
    Type: String
    Default: "https://github.com/lordmuffin/aws-cfn-plex.git"
# Do this stuff inside the VM ahead of time???
  AmazonDrive:
    Description: The Amazon Drive you will store Plex Media in
  ENCFSKey:
    Description: The ENFS Key for the XML file.
  ENCFSxml:
    Description: The ENCFS xml for encrypting your drive.


Resources:
  # Create Lambda Roles
  LambdaExecutionRole:
  Type: AWS::IAM::Role
  Properties:
    AssumeRolePolicyDocument:
      Version: '2012-10-17'
      Statement:
      - Effect: Allow
        Principal:
          Service:
          - lambda.amazonaws.com
        Action:
        - sts:AssumeRole
    Path: "/"
    Policies:
    - PolicyName: root
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - logs:CreateLogGroup
          - logs:CreateLogStream
          - logs:PutLogEvents
          Resource: arn:aws:logs:*:*:*
        - Effect: Allow
          Action:
          - ec2:DescribeImages
          Resource: "*"
  # Create Lambda Function
  AMIInfoFunction:
  Type: AWS::Lambda::Function
  Properties:
    Code:
      S3Bucket: !Ref S3Bucket
      S3Key: !Ref S3Key
    Handler: !Sub "${ModuleName}.handler"
    Runtime: nodejs4.3
    Timeout: 30
    Role: !GetAtt LambdaExecutionRole.Arn!

  # Execute Lambda Function
  AMIInfo:
  Type: Custom::AMIInfo
  Properties:
    ServiceToken: !GetAtt AMIInfoFunction.Arn
    Region: !Ref "AWS::Region"
    Architecture:
      Fn::FindInMap:
      - AWSInstanceType2Arch
      - !Ref InstanceType
      - Arch
  # Create Plex Instance
  Plex:
    Type: "AWS::EC2::Instance"
    Properties:
      ImageId: !GetAtt AMIInfo.Id
      InstanceType: !Ref InstanceType
      KeyName: ?
Outputs:
