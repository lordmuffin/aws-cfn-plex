---

- name: Generate encfs gpg keyfile
  shell: tr -dc A-Za-z0-9 < {{ encfs_random }} | head -c {{ encfs_gpg_length }} |
         gpg --symmetric --cipher-algo aes --armor > {{ encfs_gpg_keyfile }}
  args:
    creates: '{{ encfs_gpg_keyfile }}'
  changed_when: False

- name: Create encfs encrypted directory with gpg passphrase
  shell: printf "p\n" | encfs {{ encfs }}{{ encfs_suffix }} {{ encfs }} --extpass="gpg --no-mdc-warning -o - {{ encfs_gpg_keyfile }}"
  args:
    creates: '{{ encfs_config_file }}'
  register: encfs_created

- name: Create padlock.sh script for manual encfs management
  template:
    src: 'padlock.sh.j2'
    dest: '{{ encfs + encfs_suffix + "/padlock.sh" }}'
    mode: 0755

- name: Mount encfs encrypted directory with gpg passphrase
  shell: encfs {{ encfs + encfs_suffix }} {{ encfs }} --extpass="gpg --no-mdc-warning -o - {{ encfs_gpg_keyfile }}"
  when: ((encfs_created is defined and encfs_created.changed == False) and
        (encfs_is_mounted is undefined or encfs_is_mounted is defined and encfs_is_mounted.stdout == "") and
        (encfs_mode is undefined or (encfs_mode is defined and encfs_mode != 'close')))


